{"version":3,"sources":["component/show-image/show-image.jsx","App.js","index.js"],"names":["ShowImage","images","loaded","fetchImages","dataLength","next","hasMore","loader","src","alt","Grid","container","spacing","className","style","marginTop","map","image","index","item","xs","key","urls","regular","apiRoot","accessKey","App","useState","setImages","setIsLoaded","a","count","console","log","abortController","AbortController","signal","axios","get","res","data","alert","abort","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UA2BeA,G,MAtBG,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,YAAlB,OACd,kBAAC,IAAD,CACCC,WAAYH,EACZI,KAAM,kBAAMF,EAAY,KACxBG,SAAS,EACTC,OACC,yBACGC,IAAI,wFACJC,IAAI,aAGL,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,aAAaC,MAAO,CAAEC,UAAW,SAClEb,EACGD,EAAOe,KAAI,SAACC,EAAOC,GAAR,OACH,kBAACR,EAAA,EAAD,CAAMS,MAAI,EAACC,GAAI,EAAGP,UAAU,aAAaQ,IAAKH,GAC1C,yBAAKV,IAAKS,EAAMK,KAAKC,QAASd,IAAI,iBAE1C,O,iBCjBde,G,MAAU,4BACVC,EAAY,8CAsCHC,EApCH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACT1B,EADS,KACD2B,EADC,OAEcD,oBAAS,GAFvB,mBAETzB,EAFS,KAED2B,EAFC,KAGV1B,EAAW,uCAAG,8CAAA2B,EAAA,6DAAOC,EAAP,+BAAe,GACjCC,QAAQC,IAAI,qBACNC,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAHb,kBAKEC,IAAMC,IAAN,UAAad,EAAb,oCAAgDC,EAAhD,kBAAmEM,GAAS,CAACK,OAAOA,IALtF,OAKVG,EALU,OAMhBX,EAAU,GAAD,mBAAK3B,GAAL,YAAgBsC,EAAIC,QAC7BX,GAAY,GAPI,yDASdY,MAAM,EAAD,IATS,mBAUP,WACLP,EAAgBQ,WAXJ,0DAAH,qDAqBjB,OANAC,qBAAU,WACRxC,MAEC,IAIG,yBAAKU,UAAU,aACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,iBAAd,uCACA,wBAAIA,UAAU,cAAd,6BAID,kBAAC,EAAD,CAAWZ,OAAQA,EAAQC,OAAQA,EAAQC,YAAaA,GAAxD,OCnCXyC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2b28aca5.chunk.js","sourcesContent":["import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './show-image.styles.scss'\r\n\r\nconst ShowImage = ({images, loaded, fetchImages}) => (\r\n    <InfiniteScroll\r\n     dataLength={images}\r\n     next={() => fetchImages(10)}\r\n     hasMore={true}\r\n     loader={\r\n      <img\r\n         src=\"https://res.cloudinary.com/chuloo/image/upload/v1550093026/scotch-logo-gif_jq4tgr.gif\"\r\n         alt=\"loading\"\r\n      />}\r\n    >\r\n        <Grid container spacing={3} className=\"image-grid\" style={{ marginTop: \"30px\"}}>\r\n            {loaded ?\r\n                images.map((image, index) => (\r\n                        <Grid item xs={3} className=\"image-item\" key={index} >\r\n                            <img src={image.urls.regular} alt='unsplash'/>\r\n                        </Grid>           \r\n                )): \"\"}\r\n        </Grid>\r\n    </InfiniteScroll>\r\n)\r\n\r\nexport default ShowImage;\r\n","import React, {useState, useEffect} from 'react';\nimport ShowImage from './component/show-image/show-image.jsx';\nimport axios from 'axios';\nimport './App.css';\n\nconst apiRoot = \"https://api.unsplash.com\";\nconst accessKey = \"f2xPTZ6zB7zbzdB2wun7etcviDb52SBewIPpkus38v4\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [loaded, setIsLoaded] = useState(false);\n  const fetchImages = async (count = 20) => {\n    console.log('I am in useEffect');\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    try {\n      const res = await axios.get(`${apiRoot}/photos/random?client_id=${accessKey}&count=${count}`, {signal:signal});\n      setImages([...images, ...res.data]);\n      setIsLoaded(true);\n    } catch(error) {\n        alert(error);\n        return function cleanup() {\n          abortController.abort();\n        }\n    }\n  }\n  useEffect(() => {\n    fetchImages();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);// second parameter is an [] means the function fetchImages in the hook only run when the array is updated or modified\n    \n    // Return JSX\n  return (\n        <div className=\"container\">\n          <div className=\"header content\">\n            <h2 className=\"subtitle is-6\">Infinite Scroll by using React Hook</h2>\n            <h1 className=\"title is-1\">\n              Infinite Scroll Unsplash\n            </h1>\n          </div>\n           <ShowImage images={images} loaded={loaded} fetchImages={fetchImages} > </ShowImage>\n        </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}